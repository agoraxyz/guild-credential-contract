{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x6c2c223b84724c4b8fD41ae0142c2369DFa7E319",
      "txHash": "0xea6c2699b4ca9aa6ca982570171479f92a14593645d6170b032923347257b51f",
      "kind": "uups"
    }
  ],
  "impls": {
    "cfe5d4cdfcd54a9f61b3ae6f2cf4dc415714430244b6d9ab7e95b283566987ef": {
      "address": "0x326f14942f8899406e3224bd63E9f250D275a52e",
      "txHash": "0x038f3792b42271f121d4744f8e610248d0942520b77ba7afc84f46f86a88abb1",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SoulboundERC721",
            "src": "contracts/token/SoulboundERC721.sol:20"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "401",
            "type": "t_address_payable",
            "contract": "TreasuryManager",
            "src": "contracts/utils/TreasuryManager.sol:10"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "TreasuryManager",
            "src": "contracts/utils/TreasuryManager.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)48_storage",
            "contract": "TreasuryManager",
            "src": "contracts/utils/TreasuryManager.sol:15"
          },
          {
            "label": "validSigner",
            "offset": 0,
            "slot": "451",
            "type": "t_address",
            "contract": "GuildPin",
            "src": "contracts/GuildPin.sol:24"
          },
          {
            "label": "cids",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GuildPin",
            "src": "contracts/GuildPin.sol:27"
          },
          {
            "label": "claimedTokens",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_address,t_mapping(t_enum(GuildAction)5364,t_mapping(t_uint256,t_uint256)))",
            "contract": "GuildPin",
            "src": "contracts/GuildPin.sol:30"
          },
          {
            "label": "claimedTokensDetails",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_struct(PinData)5382_storage)",
            "contract": "GuildPin",
            "src": "contracts/GuildPin.sol:34"
          },
          {
            "label": "totalMintedPerGuild",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GuildPin",
            "src": "contracts/GuildPin.sol:37"
          },
          {
            "label": "guildActionPrettyNames",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_enum(GuildAction)5364,t_struct(PinStrings)5401_storage)",
            "contract": "GuildPin",
            "src": "contracts/GuildPin.sol:40"
          },
          {
            "label": "initialTokensMinted",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "GuildPin",
            "src": "contracts/GuildPin.sol:43"
          },
          {
            "label": "claimerUserIds",
            "offset": 0,
            "slot": "458",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(GuildAction)5364,t_mapping(t_uint256,t_bool)))",
            "contract": "GuildPin",
            "src": "contracts/GuildPin.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "459",
            "type": "t_array(t_uint256)42_storage",
            "contract": "GuildPin",
            "src": "contracts/GuildPin.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)42_storage": {
            "label": "uint256[42]",
            "numberOfBytes": "1344"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(GuildAction)5364": {
            "label": "enum IGuildPin.GuildAction",
            "members": [
              "JOINED_GUILD",
              "IS_OWNER",
              "IS_ADMIN"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(GuildAction)5364,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(enum IGuildPin.GuildAction => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(GuildAction)5364,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(enum IGuildPin.GuildAction => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(GuildAction)5364,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(enum IGuildPin.GuildAction => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(GuildAction)5364,t_struct(PinStrings)5401_storage)": {
            "label": "mapping(enum IGuildPin.GuildAction => struct IGuildPin.PinStrings)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(GuildAction)5364,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(enum IGuildPin.GuildAction => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PinData)5382_storage)": {
            "label": "mapping(uint256 => struct IGuildPin.PinData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PinData)5382_storage": {
            "label": "struct IGuildPin.PinData",
            "members": [
              {
                "label": "holder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "action",
                "type": "t_enum(GuildAction)5364",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "userId",
                "type": "t_uint88",
                "offset": 21,
                "slot": "0"
              },
              {
                "label": "guildName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "id",
                "type": "t_uint128",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pinNumber",
                "type": "t_uint128",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "mintDate",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "createdAt",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PinStrings)5401_storage": {
            "label": "struct IGuildPin.PinStrings",
            "members": [
              {
                "label": "actionName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint88": {
            "label": "uint88",
            "numberOfBytes": "11"
          }
        }
      }
    }
  }
}
